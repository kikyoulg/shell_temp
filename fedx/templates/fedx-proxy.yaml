apiVersion: v1
kind: Secret
metadata:
  name: fedx-certs
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  ca-chain.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQzVENDQXNXZ0F3SUJBZ0lVQVRuL2V2cmhCMWgxNWJ4MmNXdjNBaDF0K3k0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pqRUxNQWtHQTFVRUJoTUNRMDR4RVRBUEJnTlZCQWdUQ0ZOb1lXNW5hR0ZwTVJFd0R3WURWUVFIRXdoVAphR0Z1WjJoaGFURVBNQTBHQTFVRUNoTUdXa1ZVV1ZWT01ROHdEUVlEVlFRTEV3WmFSVlJaVlU0eER6QU5CZ05WCkJBTVRCbHBGVkZsVlRqQWdGdzB5TWpBMk1qSXhNekEzTURCYUdBOHlNVEl5TURVeU9URXpNRGN3TUZvd1lERUwKTUFrR0ExVUVCaE1DUTA0eEVUQVBCZ05WQkFnVENGTm9ZVzVuYUdGcE1SRXdEd1lEVlFRSEV3aFRhR0Z1WjJoaAphVEVOTUFzR0ExVUVDaE1FUWtGT1N6RU5NQXNHQTFVRUN4TUVRa0ZPU3pFTk1Bc0dBMVVFQXhNRVFrRk9TekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTRmUlgzVkYybjRDRWxsZDg1Qk5KN2IKNjh3NHVSRTJJVGZ4UGs2cXdiRmVyZmloSThlQlRFQmZDMWw2THYycnhTWlM4UWk0NnVWMi9nVW9FWE9nMHpjTgpZcGIxK3h2VVpqVU1vT1VNbi80L0JIU0ljZkxmYk10aXJoUGsyait4bjFqZlpOVU1MbnpQYldlWlljRHVtU28vCk83MXhieFJBRlkxMXpFZkcxeHJwWjRaOU92ODM3QXBOMUliSmRNRGFvM1F2SlFZZzZFU25uRHdJaWZHcEVXS28KNGcvZGlGa0RQclJrcHB3MTNoUjJUaVI5Qis1OFYvWmpwMFRLUjNoRU5rV0FQeUFEeW1MREt0WlA3R1lNanBrZgpaT2c5RGJkSmt4OW9objhyb05NR0FWRmo1RWlCemZ1cERxb3h3cTBXZ0tNeTB6Y29GazlnRTNGbFRscmZwUzBDCkF3RUFBYU9CaGpDQmd6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFBd0hRWURWUjBPQkJZRUZHZWU0KzloZXo3cQplT1cySDgraEFXYU93QnJMTUI4R0ExVWRJd1FZTUJhQUZJVXFwTEhoZCtoNjFWV3RhdGNueWxRS0x1Q3JNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFEUUhhOHhUdGNxV0JpYkNoN3BYTCtTYWUxZzhzR090aUVZVVhPM2Z4OUgKbnhTeWtydUdhWGxXMkJCb3YvMmhNN2xrdTg4akRGbnNZczRMSFFkS25qUitOa2FKaFRocGFnckRPYXlyYjJKVAphMmRiQm1Mc0V2djJkNE5QcTQwYXRQaHdiZTdjNDB3OGxBTWpvUlU4UkRUaTNzU1hwcHEyT1BZRzhRQlM0RXBvClBYT0ptOEpJcFdNQm9wdHdWVUl3OTFaMlRDNUJKTWkvNXJqNVo1WW40U3NaUUQ0VUY1eDErdktNM2dqbStWb0oKMjhuTGdVYkZLSUkyOWVCK1hXckRjQ1FKcmhWbElqUXVsbWs4NFdLYzRzNnY5RFlnS0tmTTRsZ3pwYkNvQys5SwpmeWtXaXpUYlNJRGttUHpKQWo0djJXUldVWVcwMFkwMm5Ua3E5RDM5a0x0RQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEbmpDQ0FvYWdBd0lCQWdJVUJrb2tjRGkxVGRmS1ErdFFCU29HejRMblJkb3dEUVlKS29aSWh2Y05BUUVMCkJRQXdaakVMTUFrR0ExVUVCaE1DUTA0eEVUQVBCZ05WQkFnVENGTm9ZVzVuYUdGcE1SRXdEd1lEVlFRSEV3aFQKYUdGdVoyaGhhVEVQTUEwR0ExVUVDaE1HV2tWVVdWVk9NUTh3RFFZRFZRUUxFd1phUlZSWlZVNHhEekFOQmdOVgpCQU1UQmxwRlZGbFZUakFnRncweU1qQTJNakl4TXpBM01EQmFHQTh5TVRJeU1EVXlPVEV6TURjd01Gb3daakVMCk1Ba0dBMVVFQmhNQ1EwNHhFVEFQQmdOVkJBZ1RDRk5vWVc1bmFHRnBNUkV3RHdZRFZRUUhFd2hUYUdGdVoyaGgKYVRFUE1BMEdBMVVFQ2hNR1drVlVXVlZPTVE4d0RRWURWUVFMRXdaYVJWUlpWVTR4RHpBTkJnTlZCQU1UQmxwRgpWRmxWVGpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTkVONGFReVRHN3dZUUNqCjNlMWQ2a2Q1c0VpMnk5d3R0ZFNvVFBVZUMxZk4wWkp2S3doSzBKSjJjeTRiRENQb0xGTEVzdXBUbnRpSGJRTk8KM2dBZU45NTRxTnV4SElPVWk4Y3pSbFhPdE9CVjI2QWhPL085M21vSklkWHpHbkJmVVpSZzNpWHBwTk1XN3QxNwpvMkx5dEFEQWR3dXNwV0xPT3NRVjVkclhYelBubS9EVnEzSlNQVUJ0Tm9qQ0N1TE9kSmFuTE9sWXliWlZpNFgwCkhBdjF5bG4wU0JIQldGdzVnQkYzOXRFU0xTSDRtQ21xR2N4UHc2WTQyZi9PMjBDSUp5NVlYelFjTjBxOEhmdXUKdU9NcnlKUjMwR0IrNlN4SjkwVjR6bFdIcldvNFJNTzhHU012b3VnOGlETFMzT2VDcjR3ZUwrQ2dPTWE3Sm4rNgpYdXpRYnBjQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0VHTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3CkhRWURWUjBPQkJZRUZJVXFwTEhoZCtoNjFWV3RhdGNueWxRS0x1Q3JNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUIKQVFBVGFKY2FTeXdGd2NtelZlSVRBVisyMXJ3L2lOVUY4WkF6SUNxY3ZYMVRsTHFjWldXREppc21qc0dHK2dJMQorcEVyKzRxamhobFdkSjk1ZUpndWJxQm9pYzNsSTJRTk5sMHRZdFRxNktCYXp2UXJxU2UyQXFFS0NDclZnODYvCkUrMlNMY0pRS0R2Um5ad1Rwc2d2cmhNeDl1TW5pYXlwV2daT0gyQWZOTkd2MlZURW5OUXBxRG1rd2owUmVoZUwKQm1JMEJySm0yM2pvL0J2YVoyUmh6d0lZbTEzUm0yaWNEazZEbTBqa1QvSmRlcmxvZDRKZEsrU2xod0NjQzM3Rgp1dHFzcWlpeG5RckRVL0lheDFURDBhb3AvditRSDFsTERJeTNGRUhqNDIxR1oyc2FEWitONjkxcE91VEhqY3hRCjRnSnZEWEVDVTlHVVB1NmxXWlhqbXFGaQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  intermediate-ca-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBemg5RmZkVVhhZmdJU1dWM3prRTBudHZyekRpNUVUWWhOL0UrVHFyQnNWNnQrS0VqCng0Rk1RRjhMV1hvdS9hdkZKbEx4Q0xqcTVYYitCU2dSYzZEVE53MWlsdlg3RzlSbU5ReWc1UXlmL2o4RWRJaHgKOHQ5c3kyS3VFK1RhUDdHZldOOWsxUXd1Zk05dFo1bGh3TzZaS2o4N3ZYRnZGRUFWalhYTVI4YlhHdWxuaG4wNgovemZzQ2szVWhzbDB3TnFqZEM4bEJpRG9SS2VjUEFpSjhha1JZcWppRDkySVdRTSt0R1NtbkRYZUZIWk9KSDBICjdueFg5bU9uUk1wSGVFUTJSWUEvSUFQS1lzTXExay9zWmd5T21SOWs2RDBOdDBtVEgyaUdmeXVnMHdZQlVXUGsKU0lITis2a09xakhDclJhQW96TFROeWdXVDJBVGNXVk9XdCtsTFFJREFRQUJBb0lCQUROZytDRjFqSENOc3dNWQpsOVNCekd3TXhhb1NPWTlndnNjREMxVHdtM2RxOGxLWFdDUFN4djhFc2YrTHhVcldGajZIVGkydWFsN29Xa2xPCnc0cmUrOGN0UHZZQ09xV2xQQlRkSVAzM042cFlhdlBoVHdZTFMwTW5SZDBQbnBkaDN5WjRDTnBTUHdROWNEZnkKczdzenZsb1ppUHFmMitCZ1dQNzU3Z0cyUHNnbUV2b2xJVHdObGh2T0diYWtZMTh2TGt4SmxkajFLNkUwcTJBVwpZcXFJeXpocVZaVHE3QjBLZEZjZDJyTjhxRi9oS3kvTmZWbTkwZzEva1dLK3RuaFE1NVliV2JhNERhQkJEam9PCk5BOWxzY3pUUTZxRHB5NGdTVmwrMUd0WWJpa0tIa0RWQ1JITDBaWHl2V2pHVHhBRVpxSk9YbXlNUit6bFVvaWwKSUpYQmpNRUNnWUVBMGNLbHBRTXlzaDhDa0ZKbHhwVDkyM20xQzRxaDVrM2YrendaMmtnWkRpSjBQQUhSdEl5RwphQzI2ZHFUVU5tbGlYR0lHRVBLVklWbzNwb2hwK08yTTdyaHkzMnh6N2dheFFnUkFFdFp6RFMybTdTZm5ybWxWCnd2N2J3UWxSNFBMRjFadndObm1KelV5ZG9xWFN1YnFmL1FIS2paM3NDaktHU1FGQWtoSDRTTnNDZ1lFQSs0OVAKd3BpL2ZQZ0QrS2pDalVUbFdIajVjSEtNT1lieWp0OVBMUVBsN0twdUdTZGN6R2NXaEVLdWE5N3g1R1o2VWtiMwpvdC9saGlxUVVHN2x6YzRNUjdFY3ErUnRjU3B4OXZBMHZNT1pmSjNKOHVXVUI0VC9Pc2xxdEVBK0pTWlRuUjYxCmQ0cnhiam9pYjlrdnhpY1FIRGtGK1BRVlhUVDI0b3Badng5L3hKY0NnWUJteWQ2SUhTZ1RseFNYaW5rck5jbXMKYWxpb25qZTE5c1ZpaE5JYVlDZysvKzA3bHB5ZndCa0JKaDl3a2xjWGpzN1BmSTJDY28xWHViRDVuM0ZtdFduUgpkWHQ5TnRVY2VCVVd4NlJxVnNJc1hBbW52MTFOMzNwU1FyZUhRYnpvNGE3R2ZWTGFMdmF6THU4MFM5UVdoWGh1CjhCakZDdlVuRGhrMTN6STRJaXdyN3dLQmdIL2xsUCt5K1dob0VGelVNRlh5dVVnSitZZ2FOUURxZzFmd1lTaloKMm9SQkFrajNvazZwK3VDenBrcGh4MG9BY0NCMHhHS2l3dWM3ckxPNExrNDhmREhXOG1UU2RuSWF5bVpxS2VYdQo3SkpYQnQzZnF5dEhpeHd3VzNmWlViOUJoVEZVODU0Ym5qUVVpbjJqUm83UVBYaWI1VlYxZzRjbjduMnZLWUhxCldlTnhBb0dBRUhxaXkra3Z5MDAyWVBGODFhZDRiWWsrQ1BSSWVBcnZpTkRDYVp2RHN4V2RnZ1FuM2EyL0lnWnAKaTNEdmZoZDBWUWJmL2kxYzErMzVmV0JjaWFsSkV1SXBkZUVRb0psWk9UUDZwRXM4cEVONDhhSHBZbUsrbmdFUgpoVHdycVRIaFlaTlBtNXhqTTA3Y016OTZGSGEvaEtZMytIQXNwVnVmN1VZOFZwenlBOUU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  intermediate-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQzVENDQXNXZ0F3SUJBZ0lVQVRuL2V2cmhCMWgxNWJ4MmNXdjNBaDF0K3k0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pqRUxNQWtHQTFVRUJoTUNRMDR4RVRBUEJnTlZCQWdUQ0ZOb1lXNW5hR0ZwTVJFd0R3WURWUVFIRXdoVAphR0Z1WjJoaGFURVBNQTBHQTFVRUNoTUdXa1ZVV1ZWT01ROHdEUVlEVlFRTEV3WmFSVlJaVlU0eER6QU5CZ05WCkJBTVRCbHBGVkZsVlRqQWdGdzB5TWpBMk1qSXhNekEzTURCYUdBOHlNVEl5TURVeU9URXpNRGN3TUZvd1lERUwKTUFrR0ExVUVCaE1DUTA0eEVUQVBCZ05WQkFnVENGTm9ZVzVuYUdGcE1SRXdEd1lEVlFRSEV3aFRhR0Z1WjJoaAphVEVOTUFzR0ExVUVDaE1FUWtGT1N6RU5NQXNHQTFVRUN4TUVRa0ZPU3pFTk1Bc0dBMVVFQXhNRVFrRk9TekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTRmUlgzVkYybjRDRWxsZDg1Qk5KN2IKNjh3NHVSRTJJVGZ4UGs2cXdiRmVyZmloSThlQlRFQmZDMWw2THYycnhTWlM4UWk0NnVWMi9nVW9FWE9nMHpjTgpZcGIxK3h2VVpqVU1vT1VNbi80L0JIU0ljZkxmYk10aXJoUGsyait4bjFqZlpOVU1MbnpQYldlWlljRHVtU28vCk83MXhieFJBRlkxMXpFZkcxeHJwWjRaOU92ODM3QXBOMUliSmRNRGFvM1F2SlFZZzZFU25uRHdJaWZHcEVXS28KNGcvZGlGa0RQclJrcHB3MTNoUjJUaVI5Qis1OFYvWmpwMFRLUjNoRU5rV0FQeUFEeW1MREt0WlA3R1lNanBrZgpaT2c5RGJkSmt4OW9objhyb05NR0FWRmo1RWlCemZ1cERxb3h3cTBXZ0tNeTB6Y29GazlnRTNGbFRscmZwUzBDCkF3RUFBYU9CaGpDQmd6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFBd0hRWURWUjBPQkJZRUZHZWU0KzloZXo3cQplT1cySDgraEFXYU93QnJMTUI4R0ExVWRJd1FZTUJhQUZJVXFwTEhoZCtoNjFWV3RhdGNueWxRS0x1Q3JNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFEUUhhOHhUdGNxV0JpYkNoN3BYTCtTYWUxZzhzR090aUVZVVhPM2Z4OUgKbnhTeWtydUdhWGxXMkJCb3YvMmhNN2xrdTg4akRGbnNZczRMSFFkS25qUitOa2FKaFRocGFnckRPYXlyYjJKVAphMmRiQm1Mc0V2djJkNE5QcTQwYXRQaHdiZTdjNDB3OGxBTWpvUlU4UkRUaTNzU1hwcHEyT1BZRzhRQlM0RXBvClBYT0ptOEpJcFdNQm9wdHdWVUl3OTFaMlRDNUJKTWkvNXJqNVo1WW40U3NaUUQ0VUY1eDErdktNM2dqbStWb0oKMjhuTGdVYkZLSUkyOWVCK1hXckRjQ1FKcmhWbElqUXVsbWs4NFdLYzRzNnY5RFlnS0tmTTRsZ3pwYkNvQys5SwpmeWtXaXpUYlNJRGttUHpKQWo0djJXUldVWVcwMFkwMm5Ua3E5RDM5a0x0RQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  peer-key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJoeG14dWVMeHhtRGtoVkU3dW1NaFVJVVRTTmFYMzRjTUdVRmJqNzNNdTBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFL1oxWG9BVnRjMDhtdnRQZ0ppb1h6UGppMG5DdXNPZE5YajdmL1ZUcytDWjZLaU55OEphNgpNYmhUT21GLzdyVnRRVDJKSlY2TmlnK0FDRVpkRkJpeFR3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  peer.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQzekNDQXNlZ0F3SUJBZ0lVWldUL2ZUejdrbnkvejFUOHRvRGdNeVJPVmNRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1lERUxNQWtHQTFVRUJoTUNRMDR4RVRBUEJnTlZCQWdUQ0ZOb1lXNW5hR0ZwTVJFd0R3WURWUVFIRXdoVAphR0Z1WjJoaGFURU5NQXNHQTFVRUNoTUVRa0ZPU3pFTk1Bc0dBMVVFQ3hNRVFrRk9TekVOTUFzR0ExVUVBeE1FClFrRk9TekFnRncweU1qQTJNakl4TXpBM01EQmFHQTh5TVRJeU1EVXlPVEV6TURjd01Gb3dZREVMTUFrR0ExVUUKQmhNQ1EwNHhFVEFQQmdOVkJBZ1RDRk5vWVc1bmFHRnBNUkV3RHdZRFZRUUhFd2hUYUdGdVoyaGhhVEVOTUFzRwpBMVVFQ2hNRVJrVkVXREVOTUFzR0ExVUVDeE1FUmtWRVdERU5NQXNHQTFVRUF4TUVSa1ZFV0RCWk1CTUdCeXFHClNNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJQMmRWNkFGYlhOUEpyN1Q0Q1lxRjh6NDR0SndyckRuVFY0KzMvMVUKN1BnbWVpb2pjdkNXdWpHNFV6cGhmKzYxYlVFOWlTVmVqWW9QZ0FoR1hSUVlzVStqZ2dGWU1JSUJWREFPQmdOVgpIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkCkV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZOQzZkQ3hrK3BMOEt2UnJ4RFl3NDVYeEFoaGRNQjhHQTFVZEl3UVkKTUJhQUZHZWU0KzloZXo3cWVPVzJIOCtoQVdhT3dCckxNSUhVQmdOVkhSRUVnY3d3Z2NtQ0NXeHZZMkZzYUc5egpkSUlVS2k1d2NtOTRlUzVyZFdKbFptRjBaUzV1WlhTQ0Vpb3VjMnhpTG10MVltVm1ZWFJsTG01bGRJSVdLaTVpCmFYb3VjMnhpTG10MVltVm1ZWFJsTG01bGRJSVdLaTVrYlhvdWMyeGlMbXQxWW1WbVlYUmxMbTVsZElJV0tpNW4KWVhSbGQyRjVMbXQxWW1WbVlYUmxMbTVsZElJWEtpNXliMnhzYzJsMFpTNXJkV0psWm1GMFpTNXVaWFNDRlNvdQpjSFZzYzJGeUxtdDFZbVZtWVhSbExtNWxkSUlVS2k1emNHRnlheTVyZFdKbFptRjBaUzV1WlhTSEJIOEFBQUV3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbUNRNlQ5azFKaW5Hb0twYzNuS2NrZk5FZUxrZldCV09KWCtybksKa0s3YU1pd3hyV1AzaHdZREVGMHRtT1c3ZFI3cXZucHRmaU9ETm1md0dpelJ6LzRNMHNLTWg5NkpncFhjQ1pJbwp4Ny9XVUNxczBhc2JNL2tSY3ZBOXEycktvSitteEVnZThnVFJvWW9lMXVPN2VLdHJLc293QnoybGhOWkN1eld3ClM1MWlPMWtYNzdVV0V6cERwbS9aOTV1alNUeGx0SU9wOTdlbGhldFBlYnZXWGE4Zm1CMGVFY0RaUld6YUE5ZkYKNUR3YWV5cXdzMHJ5cUUxR2Fwa0R4eWhrT0NMWjd3YzZUN1FKZDR5OTlFZDVjNHdGWVphSkZ1SjV5MlowNnk5bwpJd3A4TTJXMnhsanVqYXgrM2FadWM3d0RBY3FtT1FQZ1VCQlVFRGxUak1HZ0ZlVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  root-ca-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMFEzaHBESk1idkJoQUtQZDdWM3FSM213U0xiTDNDMjExS2hNOVI0TFY4M1JrbThyCkNFclFrblp6TGhzTUkrZ3NVc1N5NmxPZTJJZHRBMDdlQUI0MzNuaW8yN0VjZzVTTHh6TkdWYzYwNEZYYm9DRTcKODczZWFna2gxZk1hY0Y5UmxHRGVKZW1rMHhidTNYdWpZdkswQU1CM0M2eWxZczQ2eEJYbDJ0ZGZNK2ViOE5XcgpjbEk5UUcwMmlNSUs0czUwbHFjczZWakp0bFdMaGZRY0MvWEtXZlJJRWNGWVhEbUFFWGYyMFJJdElmaVlLYW9aCnpFL0RwampaLzg3YlFJZ25MbGhmTkJ3M1Nyd2QrNjY0NHl2SWxIZlFZSDdwTEVuM1JYak9WWWV0YWpoRXc3d1oKSXkraTZEeUlNdExjNTRLdmpCNHY0S0E0eHJzbWY3cGU3TkJ1bHdJREFRQUJBb0lCQVFETExBK0lzYTJoQUJOMgpPTXY5M2hGTHg5Tnd4OThXcklJVUhFRTIxQzAzOTNyZk14V0NhSnVPVEhvaWEvei9oS3hYQUgzVnlORVBKWWJuCitTVSt2aCtVSW5ZUmxXN2QzbWQrZ0xHeHdVUCs1dEtkTE0rRVVwb3ZPWkxkeVBlQUVOTkxQbDJJUVN1RVQ3eDAKR3E0dkF5dTNzMVcvVGRvcVRiM0ZSbmJ1bWZRWGp4WXVXb1ZHSGRNVGxlTS96cGFXZk5IVGVSellQc2NqQmxZYwp5MExPVjBmL0VQaGdrZ3czaWxlWXBuL0ZLVEdpY0tFSStNMGNUVkp5Z0djUHhuVk1PWVJQckZjVll4Q014VmZMCnFoc2kyODlHRWM2Ym9ML0hjVDRqcm9YNCs0QXVGSEZTdFR1ekszTDRGZyt1MUJrY1JLdGZsaVFHUHZWT1FyQ0QKNzNWUmxmNVJBb0dCQU9IZkNjTmI0OEhXY0Z0bXR3K1U0WFFZYng0Z2JnYWVnRDdPbzVZeFVHMFFJYjZzS3Q1UwpFU00vVUp2cHpEV29YQWttd1FLc0o3RHQxY0ZIVjd2OU1pdXZ4a1ExamlWTktRRGk1aWJDRlBZZWdLVmlOZ1hICjNka1E2d0NqcVMvSkY4ZE9rNkRJK0ljaGJKVkkzZitwNllCSXNtTkhkVWhQL285K3h1VnljbWY1QW9HQkFPencKbFJiUk5nejFZbkNmajhmMk9UVEtiY1VuZWVRZzI4MWtqbHBpRmxsYUl3VmduRGVVR2VON24wei9nWFQyWTVoeQpPN0N5cDAzdjRMeXJtUGJUaWxQTkh2UTh6eG84RjBvWHRmSS9GK0gyc2RZdlMxek1RWjZyZVVVMzFuelo4ZW04Cmg3ekxpOXErRlJIQ0gwN2RPNlk5dGk1N2VDYkhqR0FmT0dxTTJzOFBBb0dBZjJwOGJYSW10ekFxemNUUnU3NTIKdURFWWJkeEpkUDV3eGYxM2xzQlc2RTlUV2VaeGdGeTNRalR6V2lDM2pBVmZkZUlndTBzMlVMNjUrSUF3WStIZgpMWG5JMUsySmRFMWt0aFZKVTgva1Z6cTV3NUgxZTZsVjRwK0NraWZBeHk0ZmRkVkR2azNndFFvTDRPTHNLTTlHCjQ1RWU0SlpzK00vM2dDYzZPREVwakxFQ2dZQkxmQzRUVWQybGJUdktZNXM3K2w2cFNlQ0UwaG5NS3dlN3ZOQjUKVFF5UHRONjVaTmovLytmcmlFUHRGTzJhWkxEQUxZeUVzN1lIWjJleTAveHNqbUpnWmxYNU83SkRTbWVsREQ3RQpDWVBEVW9PL2w5dXJtY3RDRUtFWEF6NExFcWcyYmdEVWpnaGxUTytMYzh2anBTbk93WlJiNUt3WHRyVXJIbWNyCjB1b1cwd0tCZ1FEUVdxdGlxNGdQTVZkQm05Q0ZxU0RaanFOYmpuWjlNQ0FXdWVVbEV4TTZhSkNtUEFwU3VTbW0Ka0pnc3F4WmkrZk1XRTd6UlJLR0ZNWmFsMmdkeW5CVWVxdHZRcUtvQTRoMGltaDh3MTU3b3M4Vm1sKyt6WDVBVQpyeHBuVkIxYmM1QjczWURDYXJBWDVZSStWVGhoLzhGcUxyV2pGOHQ2YUlPS28zV21sUFdYSGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  root-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuakNDQW9hZ0F3SUJBZ0lVQmtva2NEaTFUZGZLUSt0UUJTb0d6NExuUmRvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pqRUxNQWtHQTFVRUJoTUNRMDR4RVRBUEJnTlZCQWdUQ0ZOb1lXNW5hR0ZwTVJFd0R3WURWUVFIRXdoVAphR0Z1WjJoaGFURVBNQTBHQTFVRUNoTUdXa1ZVV1ZWT01ROHdEUVlEVlFRTEV3WmFSVlJaVlU0eER6QU5CZ05WCkJBTVRCbHBGVkZsVlRqQWdGdzB5TWpBMk1qSXhNekEzTURCYUdBOHlNVEl5TURVeU9URXpNRGN3TUZvd1pqRUwKTUFrR0ExVUVCaE1DUTA0eEVUQVBCZ05WQkFnVENGTm9ZVzVuYUdGcE1SRXdEd1lEVlFRSEV3aFRhR0Z1WjJoaAphVEVQTUEwR0ExVUVDaE1HV2tWVVdWVk9NUTh3RFFZRFZRUUxFd1phUlZSWlZVNHhEekFOQmdOVkJBTVRCbHBGClZGbFZUakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFORU40YVF5VEc3d1lRQ2oKM2UxZDZrZDVzRWkyeTl3dHRkU29UUFVlQzFmTjBaSnZLd2hLMEpKMmN5NGJEQ1BvTEZMRXN1cFRudGlIYlFOTwozZ0FlTjk1NHFOdXhISU9VaThjelJsWE90T0JWMjZBaE8vTzkzbW9KSWRYekduQmZVWlJnM2lYcHBOTVc3dDE3Cm8yTHl0QURBZHd1c3BXTE9Pc1FWNWRyWFh6UG5tL0RWcTNKU1BVQnROb2pDQ3VMT2RKYW5MT2xZeWJaVmk0WDAKSEF2MXlsbjBTQkhCV0Z3NWdCRjM5dEVTTFNING1DbXFHY3hQdzZZNDJmL08yMENJSnk1WVh6UWNOMHE4SGZ1dQp1T01yeUpSMzBHQis2U3hKOTBWNHpsV0hyV280Uk1POEdTTXZvdWc4aURMUzNPZUNyNHdlTCtDZ09NYTdKbis2Clh1elFicGNDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHcKSFFZRFZSME9CQllFRklVcXBMSGhkK2g2MVZXdGF0Y255bFFLTHVDck1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUFUYUpjYVN5d0Z3Y216VmVJVEFWKzIxcncvaU5VRjhaQXpJQ3FjdlgxVGxMcWNaV1dESmlzbWpzR0crZ0kxCitwRXIrNHFqaGhsV2RKOTVlSmd1YnFCb2ljM2xJMlFOTmwwdFl0VHE2S0JhenZRcnFTZTJBcUVLQ0NyVmc4Ni8KRSsyU0xjSlFLRHZSblp3VHBzZ3ZyaE14OXVNbmlheXBXZ1pPSDJBZk5OR3YyVlRFbk5RcHFEbWt3ajBSZWhlTApCbUkwQnJKbTIzam8vQnZhWjJSaHp3SVltMTNSbTJpY0RrNkRtMGprVC9KZGVybG9kNEpkSytTbGh3Q2NDMzdGCnV0cXNxaWl4blFyRFUvSWF4MVREMGFvcC92K1FIMWxMREl5M0ZFSGo0MjFHWjJzYURaK042OTFwT3VUSGpjeFEKNGdKdkRYRUNVOUdVUHU2bFdaWGptcUZpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
apiVersion: v1
kind: Service
metadata:
  name: fedx-proxy-node-port
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: fedx-proxy
  type: NodePort
  ports:
    - name: fedx-web
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: {{ index .Values "fedx-proxy" "nodePort" }}
    - name: fedx-helper
      protocol: TCP
      port: 8082
      targetPort: 8082
      nodePort: {{ index .Values "fedx-proxy" "fedxHelperNodePort" }}
    - name: clickhouse-8123
      protocol: TCP
      port: 8123
      targetPort: 8123
      nodePort: {{ index .Values.clickhouse.nodePort }}
    - name: kafka-9092
      protocol: TCP
      port: {{ index .Values.kafka.port }}
      targetPort: {{ index .Values.kafka.targetPort }}
      nodePort: {{ index .Values.kafka.nodePort }}
---
apiVersion: v1
kind: Service
metadata:
  name: fedx-proxy-cluster-ip
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: fedx-proxy
  type: ClusterIP
  ports:
    - name: fedx-web
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: kafka-9092
      protocol: TCP
      port: 9092
      targetPort: 9092
    - name: kafka-zk-2181
      protocol: TCP
      port: 2181
      targetPort: 2181
    - name: clickhouse-8123
      protocol: TCP
      port: 8123
      targetPort: 8123
    - name: fateflow-9380
      protocol: TCP
      port: 9380
      targetPort: 9380
    - name: fateboard-8280
      protocol: TCP
      port: 8280
      targetPort: 8280
    - name: namenode-9000
      protocol: TCP
      port: 9000
      targetPort: 9000
    - name: fedx-api-8081
      protocol: TCP
      port: 8081
      targetPort: 8081
    - name: custom-web-8180
      protocol: TCP
      port: 8180
      targetPort: 8180
    - name: custom-api-8181
      protocol: TCP
      port: 8181
      targetPort: 8181
    - name: fate-serving-8350
      protocol: TCP
      port: 8350
      targetPort: 8350
    - name: fate-serving-8059
      protocol: TCP
      port: 8059
      targetPort: 8059
    {{- with index .Values "fedx-proxy" "party" "ports" }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fedx-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    app: fedx-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fedx-proxy
  template:
    metadata:
      labels:
        app: fedx-proxy
    spec:
      hostAliases:
        {{- .Values.proxy.hostAliases | toYaml | nindent 6 }}
      volumes:
        - name: fedx-proxy
          configMap:
            name: fedx-proxy
      containers:
      - name: fedx-proxy
        image: {{ .Values.image.repository }}/nginx:{{ .Values.nginx.imageTag}}
        imagePullPolicy: {{ .Values.nginx.PullPolicy}}
      {{ if .Values.module.resourceConf }}
        resources:
        {{- with index .Values "fedx-proxy" "resources" }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- if .Values.module.readinessProbe }}
        readinessProbe:
          tcpSocket:
            port: 8080
          {{- with .Values.readinessProbe }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- end }}
      {{- if .Values.module.livenessProbe }}
        livenessProbe:
          tcpSocket:
            port: 8080
          {{- with .Values.livenessProbe }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- end }}
        volumeMounts:
          - name: fedx-certs
            mountPath: /etc/nginx/tls
          - name: fedx-proxy
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/conf.d/fedx-web.conf
            subPath: fedx-web.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/kafka.conf
            subPath: kafka.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/kafka-zookeeper.conf
            subPath: kafka-zookeeper.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/clickhouse.conf
            subPath: clickhouse.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/fateflow.conf
            subPath: fateflow.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/fateboard.conf
            subPath: fateboard.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/namenode.conf
            subPath: namenode.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/custom-fedx-web.conf
            subPath: custom-fedx-web.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/custom-fedx-api.conf
            subPath: custom-fedx-api.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/fedx-api.conf
            subPath: fedx-api.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/fedx-helper.conf
            subPath: fedx-helper.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/fate-serving-8350.conf
            subPath: fate-serving-8350.conf
          - name: fedx-proxy
            mountPath: /etc/nginx/tcp.d/fate-serving-8059.conf
            subPath: fate-serving-8059.conf
          {{- with index .Values "fedx-proxy" "party" "mounts" }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
        - name: fedx-certs
          secret:
            secretName: fedx-certs
        - name: fedx-proxy
          configMap:
            name: fedx-proxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fedx-proxy
  namespace: {{ .Release.Namespace }}
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  auto;

    pid /var/run/nginx.pid;

    events {
      worker_connections  102400;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      underscores_in_headers on;
      client_max_body_size 10240m;
      sendfile        on;
      #tcp_nopush     on;

      error_log /dev/stdout warn;

      access_log /dev/stdout main;

      keepalive_timeout  65;

      #gzip  on;

      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }

      resolver kube-dns.kube-system.svc.cluster.local;
      include /etc/nginx/conf.d/*.conf;
    }

    stream {
        log_format tcp_proxy '$remote_addr [$time_local] '
                             '$protocol $status $bytes_sent $bytes_received '
                             '$session_time "$upstream_addr" '
                             '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';
    
        access_log /dev/stdout tcp_proxy;
        error_log /dev/stdout warn;

        resolver kube-dns.kube-system.svc.cluster.local;
        include /etc/nginx/tcp.d/*.conf;
    }
  fedx-web.conf: |-
    server {
      listen 8080;
      server_name _;

      location /fate/ {
        proxy_pass http://localhost:8280/;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
      }

      location /websocket/ {
        proxy_pass http://localhost:8280/websocket/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-real-ip $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
      }

      location /log/ {
        proxy_pass http://localhost:8280/log/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-real-ip $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
      }

      location /custom-fedx-web/ {
        proxy_pass http://localhost:8180/custom-fedx-web/;
        proxy_redirect off;
        proxy_set_header Host $host;
      }

      location /custom-fedx-api/ {
        proxy_pass http://localhost:8181/;
        proxy_redirect off;
        proxy_set_header Host $host;
      }

      location /fedx-api/ {
        proxy_pass http://fedx-api:8081/;
        proxy_redirect off;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

      location /fate-serving/ {
        proxy_pass http://fedx-proxy-cluster-ip.{{ .Release.Namespace }}:8350/;
        add_header 'Access-Control-Allow-Origin' *;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' *;
        add_header 'Access-Control-Allow-Headers' *;

        proxy_redirect off;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

      location / {
        proxy_pass http://fedx-web:8080/;
        proxy_redirect off;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
    }
  fedx-helper.conf: |-
    server {
      listen 8082;
      proxy_pass fedx-helper:8080;
    }
  kafka.conf: |-
    server {
      listen 9092;
      proxy_pass kafka-headless.{{ .Release.Namespace }}:9092;
    }
  kafka-zookeeper.conf: |-
    server {
      listen 2181;
      proxy_pass kafka-zookeeper.{{ .Release.Namespace }}:2181;
    }
  clickhouse.conf: |-
    server {
      listen 8123;
      proxy_pass clickhouse-cluster.{{ .Release.Namespace }}:8123;
    }
  fateflow.conf: |-
    server {
      listen 9380;
      set $upstream fateflow.{{ .Values.fate.namespace }}.svc.cluster.local:9380;
      proxy_pass $upstream;
    }
  fedx-api.conf: |-
    server {
      listen 8081;
      proxy_pass fedx-api.{{ .Release.Namespace }}:8081;
    }
  fateboard.conf: |-
    server {
      listen 8280;
      set $upstream fate-proxy-cluster-ip.{{ .Values.fate.namespace }}.svc.cluster.local:8080;
      proxy_pass $upstream;
    }
  namenode.conf: |-
    server {
      listen 9000;
      set $upstream fate-proxy-cluster-ip.{{ .Values.fate.namespace }}.svc.cluster.local:9000;
      proxy_pass $upstream;
    }
  custom-fedx-web.conf: |-
    server {
      listen 8180;
      set $upstream fedx-proxy-cluster-ip.fedx-custom-{{ index .Values.fate "party-id" }}.svc.cluster.local:8080;
      proxy_pass $upstream;
    }
  custom-fedx-api.conf: |-
    server {
      listen 8181;
      set $upstream fedx-proxy-cluster-ip.fedx-custom-{{ index .Values.fate "party-id" }}.svc.cluster.local:8081;
      proxy_pass $upstream;
    }
  fate-serving-8350.conf: |-
    server {
      listen 8350;
      set $upstream fate-serving-proxy-cluster-ip.{{ index .Values "fate-serving" "namespace" }}.svc.cluster.local:8350;
      proxy_pass $upstream;
    }
  fate-serving-8059.conf: |-
    server {
      listen 8059;
      set $upstream fate-serving-proxy-cluster-ip.{{ index .Values "fate-serving" "namespace" }}.svc.cluster.local:8059;
      proxy_pass $upstream;
    }
  {{- with index .Values "fedx-proxy" "party" "confs" }}
    {{- toYaml . | nindent 2 }}
  {{- end }}
