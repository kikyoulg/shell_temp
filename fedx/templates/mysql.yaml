apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: {{ .Release.Namespace }}
  labels:
    app: mysql
spec:
  type: {{ .Values.mysql.service.type }}
  ports:
  - port: 3306
    targetPort: 3306
  {{- if eq .Values.mysql.service.type "NodePort" }}
    nodePort: {{ .Values.mysql.service.nodePort }}
  {{- end}}
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: zetyun-mysql
        image: {{ .Values.image.repository }}/mysql:{{ .Values.mysql.imageTag }}
        imagePullPolicy: {{ .Values.mysql.imagePullPolicy }}
      {{ if .Values.module.resourceConf }}
        resources:
        {{- with index .Values "mysql" "resources" }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- if .Values.module.readinessProbe }}
        readinessProbe:
          tcpSocket:
            port: 3306
          {{- with .Values.readinessProbe }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- end }}
      {{- if .Values.module.livenessProbe }}
        livenessProbe:
          tcpSocket:
            port: 3306
          {{- with .Values.livenessProbe }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- end }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "Wa@123456"
        volumeMounts:
        {{ if .Values.module.persistence  }}
        - name: mysql-data
          mountPath: /var/lib/mysql
        {{ end }}
        - name: mysql-ddl
          mountPath: /docker-entrypoint-initdb.d/ddl.sql
          subPath: ddl.sql
        - name: mysql-dml
          mountPath: /docker-entrypoint-initdb.d/dml.sql
          subPath: dml.sql
        - name: mysql-dml2
          mountPath: /docker-entrypoint-initdb.d/dml2.sql
          subPath: dml2.sql
        - name: mysql
          mountPath: /etc/mysql/conf.d/
      volumes:
      - name: mysql-ddl
        configMap:
          name: mysql-ddl
      - name: mysql-dml
        configMap:
          name: mysql-dml
      - name: mysql-dml2
        configMap:
          name: mysql-dml2
      - name: mysql
        configMap:
          name: mysql
      {{ if .Values.module.persistence  }}
      - name: mysql-data
        persistentVolumeClaim:
          claimName: pvc-mysql
      {{ end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
  namespace: {{ .Release.Namespace }}
  labels:
    app: mysql
data:
  mysql.cnf: |
    [client]
    default-character-set=utf8mb4
    [mysql]
    default-character-set=utf8mb4
    [mysqld]
    character-set-server=utf8mb4
    default-time-zone="+08:00"
    max_connections=10000
    skip-name-resolve=1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-ddl
  namespace: {{ .Release.Namespace }}
  labels:
    app: mysql
data:
  {{- $files := .Files }}
  {{- range tuple "ddl.sql" }}
  {{ . }}: |-
{{ $files.Get . | indent 4 }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-dml
  namespace: {{ .Release.Namespace }}
  labels:
    app: mysql
data:
  {{- $files := .Files }}
  {{- range tuple "dml.sql" }}
  {{ . }}: |-
{{ $files.Get . | indent 4 }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-dml2
  namespace: {{ .Release.Namespace }}
  labels:
    app: mysql
data:
  {{- $files := .Files }}
  {{- range tuple "dml2.sql" }}
  {{ . }}: |-
{{ $files.Get . | indent 4 }}
  {{- end }}
