module:
  resourceConf: true
  readinessProbe: false
  livenessProbe: false
  persistence: true
  initContainers: false
fate:
  party-id: 1000
  namespace: fate-1000
image:
  repository: registry.zet-fl.com/fedx/release
  pullPolicy: Always
  imageTag: v1.1.2
storage:
  storageMode: storageclass
  storageClassName: nfs
  datatxRequestStorageSize: 10Gi
  mysqlRequestStorageSize: 10Gi
  shareRequestStorageSize: 1Gi
  shareDirSize: 10Gi
  nfsPath: /data/nfs/1000
  nfsServer: 172.20.8.110
ip:
  localIp: 172.20.8.110
readinessProbe:
  initialDelaySeconds: 0
  timeoutSeconds: 1
  periodSeconds: 3
  successThreshold: 1
  failureThreshold: 5
livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 10
proxy:
  hostAliases:
  - ip: 172.20.8.110
    hostnames:
      - "1000.proxy.kubefate.net"
      - "1100.proxy.kubefate.net"
      - "2000.proxy.kubefate.net"
fedx-api:
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 4
      memory: 4Gi
  service:
    type: NodePort
    nodePort: 31001
  hive:
    selector: 1
fedx-job-api:
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
fedx-job-worker:
  resources:
    requests:
      cpu: 1
      memory: 512Mi
    limits:
      cpu: 2
      memory: 1Gi
  realai:
    url: http://rsc-service.rsc.svc.cluster.local:80
fedx-postman:
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
  partners:
  - party-id: 1000
    bootstrap: pulsar://pulsar.fate-1000.svc.cluster.local:6650
  - party-id: 1100
    bootstrap: pulsar://fate-proxy-cluster-ip.fate-1000.svc.cluster.local:1109
  - party-id: 2000
    bootstrap: pulsar://fate-proxy-cluster-ip.fate-1000.svc.cluster.local:2009
mysql:
  name: fedx
  user: root
  passwd: V2FAMTIzNDU2
  host: mysql
  port: 3306
  imageTag: 8.0.26
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 1
      memory: 2Gi
    limits:
      cpu: 4
      memory: 8Gi
  service:
    type: NodePort
    nodePort: 31002
redis:
  host: 172.20.8.110
  port: 30997
fedx-proxy:
  nodePort: 31000
  fedxHelperNodePort: 32210
  resources:
    requests:
      cpu: 500m
      memory: 3Gi
    limits:
      cpu: 1
      memory: 6Gi
  party:
    ports:
      # party: 1000
      - name: kafka-1008
        protocol: TCP
        port: 1008
        targetPort: 1008
      # party: 1100
      - name: kafka-1108
        protocol: TCP
        port: 1108
        targetPort: 1108
      # party: 2000
      - name: kafka-2008
        protocol: TCP
        port: 2008
        targetPort: 2008
    mounts:
      - name: fedx-proxy
        mountPath: /etc/nginx/tcp.d/party-1000.conf
        subPath: party-1000.conf
      - name: fedx-proxy
        mountPath: /etc/nginx/tcp.d/party-1100.conf
        subPath: party-1100.conf
      - name: fedx-proxy
        mountPath: /etc/nginx/tcp.d/party-2000.conf
        subPath: party-2000.conf
    confs:
      party-1000.conf: |-
        server {
          listen 1008 ssl;
          proxy_pass kafka-headless.fedx-1000:9092;
          proxy_ssl off;

          ssl_certificate /etc/nginx/tls/peer.pem;
          ssl_certificate_key /etc/nginx/tls/peer-key.pem;
          ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
          ssl_ciphers HIGH:!aNULL:!MD5;
          ssl_session_cache shared:SSL:20m;
          ssl_session_timeout 4h;
          ssl_handshake_timeout 30s;
          ssl_verify_client on;
          ssl_verify_depth 2;
          ssl_client_certificate /etc/nginx/tls/ca-chain.pem;
        }
      party-1100.conf: |-
        server {
          listen 1108;
          proxy_pass 1100.proxy.kubefate.net:31108;
          proxy_ssl on;

          proxy_ssl_certificate /etc/nginx/tls/peer.pem;
          proxy_ssl_certificate_key /etc/nginx/tls/peer-key.pem;
          proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
          proxy_ssl_ciphers HIGH:!aNULL:!MD5;
          proxy_ssl_session_reuse on;
          proxy_ssl_verify on;
          proxy_ssl_verify_depth 2;
          proxy_ssl_trusted_certificate /etc/nginx/tls/ca-chain.pem;
        }
      party-2000.conf: |-
        server {
          listen 2008;
          proxy_pass 2000.proxy.kubefate.net:32008;
          proxy_ssl on;

          proxy_ssl_certificate /etc/nginx/tls/peer.pem;
          proxy_ssl_certificate_key /etc/nginx/tls/peer-key.pem;
          proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
          proxy_ssl_ciphers HIGH:!aNULL:!MD5;
          proxy_ssl_session_reuse on;
          proxy_ssl_verify on;
          proxy_ssl_verify_depth 2;
          proxy_ssl_trusted_certificate /etc/nginx/tls/ca-chain.pem;
        }
fedx-web:
  resources:
    requests:
      cpu: 500m
      memory: 3Gi
    limits:
      cpu: 1
      memory: 6Gi
  custom-config:
    config.json: |-
fedx-helper:
  resources:
    requests:
      cpu: 500m
      memory: 3Gi
    limits:
      cpu: 1
      memory: 6Gi
nginx:
  imageTag: 1.22.0
  PullPolicy: IfNotPresent
clickhouse:
  url: jdbc:clickhouse://clickhouse-cluster:8123/
  database: default
  username: default
  # passwd: ck@12345
  passwd: Y2tAMTIzNDU=
  nodePort: 31003
clickhouse2:
  url: jdbc:clickhouse://172.20.8.110:30996
kafka:
  port: 1008
  targetPort: 1008
  nodePort: 31008
fedLearner:
  address: http://39.105.91.102:30200
fate-serving:
  namespace: fate-serving-1000
s3:
  path: http://21.33.3.21:8060
  bucket: msmp-kf-bucket-sit-01
  access-key: 48361UF2S2W6TV006EGU
  secret-key: A5zUkKxrFSpm9vQOLolvrhnb6wSbcJQAlf4VfikZ
  format: CSVWithNames